// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WmTestProject.DataAccess;

namespace WmTestProject.DataAccess.Migrations
{
    [DbContext(typeof(WmTestContext))]
    [Migration("20201202121621_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WmTestProject.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 557, DateTimeKind.Local).AddTicks(9123),
                            Name = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(4383),
                            Name = "Category2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(4423),
                            Name = "Category3"
                        });
                });

            modelBuilder.Entity("WmTestProject.Domain.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(5518),
                            Name = "Manufacturer1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(5577),
                            Name = "Manufacturer2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(5582),
                            Name = "Manufacturer3"
                        });
                });

            modelBuilder.Entity("WmTestProject.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(9986),
                            Description = "Description 1234",
                            ManufacturerId = 1,
                            Name = "Product 1",
                            Price = 346m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 561, DateTimeKind.Local).AddTicks(82),
                            Description = "Description 1234",
                            ManufacturerId = 2,
                            Name = "Product 2",
                            Price = 400m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 561, DateTimeKind.Local).AddTicks(88),
                            Description = "Description 1234",
                            ManufacturerId = 3,
                            Name = "Product 3",
                            Price = 100m,
                            SupplierId = 3
                        });
                });

            modelBuilder.Entity("WmTestProject.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(6609),
                            Name = "Supplier1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(6672),
                            Name = "Supplier2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 12, 2, 13, 16, 20, 560, DateTimeKind.Local).AddTicks(6676),
                            Name = "Supplier3"
                        });
                });

            modelBuilder.Entity("WmTestProject.Domain.Entities.Product", b =>
                {
                    b.HasOne("WmTestProject.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WmTestProject.Domain.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WmTestProject.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
